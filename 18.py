piramid = [ (75),
			(95,64),
			(17,47,82),
			(18,35,87,10),
			(20,4,82,47,65),
			(19,01,23,75,03,34),
			(88,02,77,73,07,63,67),
			(99,65,04,28,06,16,70,92),
			(41,41,26,56,83,40,80,70,33),
			(41,48,72,33,47,32,37,16,94,29),
			(53,71,44,65,25,43,91,52,97,51,14),
			(70,11,33,28,77,73,17,78,39,68,17,57),
			(91,71,52,38,17,14,91,43,58,50,27,29,48),
			(63,66,04,68,89,53,67,30,73,16,69,87,40,31),
			(04,62,98,27,23,9,70,98,73,93,38,53,60,04,23)]

tracks = [ 
			[0, 0, 0, 0, 75, 0, 1],
			[0, 0, 0, 0, 75, 0, 0],
			[0, 0, 0, 0, 75, 0, 0],
			[0, 0, 0, 0, 75, 0, 0],
			[0, 0, 0, 0, 75, 0, 0],
			[0, 0, 0, 0, 75, 0, 0],
			[0, 0, 0, 0, 75, 0, 0],
			[0, 0, 0, 0, 75, 0, 0],
			[0, 0, 0, 0, 75, 0, 0],
			[0, 0, 0, 0, 75, 0, 0],
			[0, 0, 0, 0, 75, 0, 0],
			[0, 0, 0, 0, 75, 0, 0],
			[0, 0, 0, 0, 75, 0, 0],
			[0, 0, 0, 0, 75, 0, 0],
			[0, 0, 0, 0, 75, 0, 0],
			[0, 0, 0, 0, 75, 0, 0],
			[0, 0, 0, 0, 75, 0, 0],
			[0, 0, 0, 0, 75, 0, 0],
			[0, 0, 0, 0, 75, 0, 0],
			[0, 0, 0, 0, 75, 0, 0],
			[0, 0, 0, 0, 75, 0, 0],
			[0, 0, 0, 0, 75, 0, 0],
			[0, 0, 0, 0, 75, 0, 0],
			[0, 0, 0, 0, 75, 0, 0],
			[0, 0, 0, 0, 75, 0, 0],
			[0, 0, 0, 0, 75, 0, 0],
			[0, 0, 0, 0, 75, 0, 0],
			[0, 0, 0, 0, 75, 0, 0],
			[0, 0, 0, 0, 75, 0, 0],
			[0, 0, 0, 0, 75, 0, 0],
			[0, 0, 0, 0, 75, 0, 0],
			[0, 0, 0, 0, 75, 0, 0],
			[0, 0, 0, 0, 75, 0, 0],
			[0, 0, 0, 0, 75, 0, 0],
			[0, 0, 0, 0, 75, 0, 0],
			[0, 0, 0, 0, 75, 0, 0],
			[0, 0, 0, 0, 75, 0, 0],
			[0, 0, 0, 0, 75, 0, 0],
			[0, 0, 0, 0, 75, 0, 0],
			[0, 0, 0, 0, 75, 0, 0],
			[0, 0, 0, 0, 75, 0, 0],
			[0, 0, 0, 0, 75, 0, 0],
			[0, 0, 0, 0, 75, 0, 0],
			[0, 0, 0, 0, 75, 0, 0],
			[0, 0, 0, 0, 75, 0, 0],
			[0, 0, 0, 0, 75, 0, 0],
			[0, 0, 0, 0, 75, 0, 0],
			[0, 0, 0, 0, 75, 0, 0],
			[0, 0, 0, 0, 75, 0, 0],
			[0, 0, 0, 0, 75, 0, 0],
			[0, 0, 0, 0, 75, 0, 0],
			[0, 0, 0, 0, 75, 0, 0],
			[0, 0, 0, 0, 75, 0, 0],
			[0, 0, 0, 0, 75, 0, 0],
			[0, 0, 0, 0, 75, 0, 0]]

index = 1
from operator import itemgetter, attrgetter, methodcaller

while index < len(piramid):
	for track in tracks:
		if track[6] == 1:
			track[0] = track[4] + piramid[index][track[5]]
			track[2] = track[4] + piramid[index][track[5]+1]
			track[3] = track[5]+1
			if track[0] < track[2]:
				a = track[2]
				b = track[3]
				track[2] = track [0]
				track[3] = track[1]
				track[0] = a
				track[1] = b
	tracks = sorted(tracks, key=itemgetter(0), reverse=True)
	f = 0
	while f < 8 :
		if tracks[f][6] == 1:
			if tracks[f][2] > tracks[len(tracks)-1-f][0]:
				tracks[len(tracks)-1-f][0] = tracks[f][2]
				tracks[len(tracks)-1-f][1] = tracks[f][3]
				tracks[len(tracks)-1-f][6] = 1
		f +=1
	for track in tracks:
		if track[6] == 1:
			track[4] = track[0]
			track[5] = track[1]
	tracks = sorted(tracks, key=itemgetter(4), reverse=True)
	print '# tracks / current sum / pyramid row / row index'
	i = 0
	for track in tracks:
		if track[6] == 1 and i < 10:
			statistic = '   ' + str(i+1) + '           ' + str(track[4]) + '           ' + str(index) + '           ' + str(track[5])
			print statistic
			i += 1
	index += 1
	print '--------------------------------------------'